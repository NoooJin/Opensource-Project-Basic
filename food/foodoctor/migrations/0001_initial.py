# Generated by Django 3.1.12 on 2023-05-23 05:28

from django.db import migrations, models
import djongo.models.fields
import foodoctor.modelExample
import foodoctor.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('address', models.TextField()),
                ('tel_number', models.TextField()),
                ('business_hours', djongo.models.fields.EmbeddedField(model_container=foodoctor.models.BusinessHours, null=True)),
                ('posX', models.IntegerField()),
                ('posY', models.IntegerField()),
                ('category', models.TextField()),
                ('menu', djongo.models.fields.ArrayField(model_container=foodoctor.models.Menu)),
                ('rating', models.DecimalField(decimal_places=2, max_digits=3)),
                ('last_updated', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('blog', djongo.models.fields.EmbeddedField(model_container=foodoctor.modelExample.Blog)),
                ('meta_data', djongo.models.fields.EmbeddedField(model_container=foodoctor.modelExample.MetaData)),
                ('headline', models.CharField(max_length=255)),
                ('body_text', models.TextField()),
                ('n_comments', models.IntegerField()),
                ('authors', models.ManyToManyField(to='foodoctor.Author')),
            ],
        ),
    ]
